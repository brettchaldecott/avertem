file(GLOB HEADERS "include/keto/cryto/*.hpp")

set(CMAKE_POSITION_INDEPENDENT_CODE ON)

## SORT .cpp by most likely to change / break compile
add_library( keto_crypto
               
            SignatureGenerator.cpp
            SignatureVerification.cpp
            HashGenerator.cpp
            KeyLoader.cpp
            SecureVectorUtils.cpp
            SessionHashGenerator.cpp
            KeyBuilder.cpp

        ${HEADERS} CipherBuilder.cpp include/keto/crypto/CipherBuilder.hpp)

target_link_libraries( keto_crypto )
target_include_directories( keto_crypto
                            PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/include" "${CMAKE_CURRENT_BINARY_DIR}/include"
                            PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/../common/include"
                            PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/../environment/include"
                            PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/../obfuscate/include"
                            PUBLIC "${CMAKE_BINARY_DIR}/src/libs/common/include/" 
                            ${Boost_INCLUDE_DIRS}
                            ${BOTAN_INCLUDE_DIR}
                            )

#if(MSVC)
#  set_source_files_properties( db_init.cpp db_block.cpp database.cpp block_log.cpp PROPERTIES COMPILE_FLAGS "/bigobj" )
#endif(MSVC)

INSTALL( TARGETS
   keto_crypto

   RUNTIME DESTINATION bin
   LIBRARY DESTINATION lib
   ARCHIVE DESTINATION lib
)
INSTALL( FILES ${HEADERS} DESTINATION "include/keto/cryto" )
