/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

#include <boost/dll/alias.hpp>
#include <boost/dll/shared_library.hpp>
#include <boost/shared_ptr.hpp>

#include <botan/hex.h>

#include "keto/common/Log.hpp"

#include "keto/obfuscate/MetaString.hpp"
#include "keto/crypto/Containers.hpp"
#include "keto/crypto/SecureVectorUtils.hpp"

#include "keto/account/AccountModuleManager.hpp"
#include "keto/common/MetaInfo.hpp"

${0015_account_module_headerList}

namespace keto {
namespace account {

${0015_account_module_consensus_scripts}

keto::crypto::SecureVector ${ACCOUNT_MODULE_SIGNATURE_METHOD}() {
    std::string signature = OBFUSCATED("${ACCOUNT_MODULE_SIGNATURE}");
    return keto::crypto::SecureVectorUtils().copyStringToSecure(signature);
}

keto::crypto::SecureVector ${ACCOUNT_MODULE_KEY_METHOD}() {
    std::string key = OBFUSCATED("${ACCOUNT_MODULE_KEY}");
    return keto::crypto::SecureVectorUtils().copyStringToSecure(key);
}

keto::software_consensus::SourceVersionMap ${ACCOUNT_MODULE_SOURCE_VERSION_METHOD_MAP}() {
    keto::software_consensus::SourceVersionMap sourceVersionMap;
    
    ${0015_account_module_headerClassList}
    ${0015_account_module_sourceClassList}
    
    return sourceVersionMap;
}

keto::software_consensus::ConsensusHashScriptInfoVector ${ACCOUNT_MODULE_CONSENSUS_HASH_SCRIPT_METHOD}() {
    keto::software_consensus::ConsensusHashScriptInfoVector consensusHashScript;
    
    ${0015_account_module_consensus_mapping}

    return consensusHashScript;
}

keto::software_consensus::ConsensusHashGeneratorPtr AccountModuleManager::getConsensusHash() {

    keto::software_consensus::SourceVersionMap sourceVersionMap = ${ACCOUNT_MODULE_SOURCE_VERSION_METHOD_MAP}();

    keto::software_consensus::ConsensusHashScriptInfoVector consensusVector = ${ACCOUNT_MODULE_CONSENSUS_HASH_SCRIPT_METHOD}();
    
    
    keto::software_consensus::ConsensusHashGeneratorPtr consensusHashGenerator = 
        keto::software_consensus::ConsensusHashGenerator::initInstance(
            consensusVector,
            &${ACCOUNT_MODULE_SIGNATURE_METHOD},
            &${ACCOUNT_MODULE_KEY_METHOD},
            sourceVersionMap);
    
    return consensusHashGenerator;
}


}
}

