syntax = "proto3";

import "google/protobuf/timestamp.proto";

package keto.proto;

enum TransactionStatus {
    INIT = 0;
    ROUTE = 1;
    DEBIT = 2;
    PROCESS = 3;
    CREDIT = 4;
    COMPLETE = 10;
    
    FAILURE = 100;
    REJECT = 200;
    
    NESTED= 300;
    
}

/**
 * The transaction definition
 */
message Transaction {
    bytes transaction_hash = 1;
    bytes transaction_signature = 2;
    bytes active_account = 3;
    TransactionStatus status = 4;
    bytes asn1_transaction_message = 5;
    int64 seconds = 6;
}

message AccountTransactionInfo {
    bytes blockchain_id = 1;
    bytes block_id = 2;
    bytes asn1_transaction_message = 3;
}

message SignedBlockWrapper {
    bytes asn1_block_message = 1;
    repeated SignedBlockWrapper nested_blocks = 2;
    bool producer_ending = 3;
}

message SignedBlockWrapperMessage {
    repeated bytes encrypted_bytes = 1;
    bool producer_ending = 2;
    bytes message_hash = 3;
    repeated bytes tangles = 4;
}

message SignedBlockBatchRequest {
    repeated bytes tangle_hashes = 3;
}

message SignedBlockBatch {
    bytes start_block_id = 1;
    bytes end_block_id = 2;
    repeated SignedBlockWrapperMessage blocks = 3;
    repeated SignedBlockBatch tangle_batches = 4;
}

message SignedBlockBatchMessage {
    repeated SignedBlockBatch tangle_batches = 1;
    bool partial_result = 2;
}


message IsBlockSyncComplete {
    uint32 version = 1;
    bool completed = 2;
}

/**
 * The change set
 */
message ChangeSet {
    bytes asn1_change_set = 1;
}


message FeeInfoMsg {
    uint32 version = 1;
    float fee_ratio = 2;
    int64 max_fee = 3;
    google.protobuf.Timestamp expiry_time = 4;
}


message AccountChainTangle {
    uint32 version = 1;
    bytes account_id = 2;
    bytes chain_tangle_id = 3;
    bool found = 4;
}

message KeyValue {
    uint32 version = 1;
    string key = 2;
    string value = 3;
}

/**
 * The block query objects focus on the basics. This prevents systems and users from getting access to the
 * data they don't have the right to view.
 */
message BlockQuery {
    uint32 version = 1;
    bytes block_hash_id = 2;
    int64 number_of_blocks = 3;
}

message TransactionResult {
    uint32 version = 1;
    bytes transaction_hash_id = 2;
    google.protobuf.Timestamp created = 3;
    bytes parent_transaction_hash_id = 4;
    bytes source_account_hash_id = 5;
    bytes target_account_hash_id = 6;
    int64 value = 7;
    bytes signature = 9;
    repeated bytes changeset_hashes = 10;
    repeated bytes transaction_trace_hashes = 11;
    uint32 status = 12;
}

message BlockResult {
    uint32 version = 1;
    bytes tangle_hash_id = 2;
    bytes block_hash_id = 3;
    google.protobuf.Timestamp created = 4;
    bytes parent_block_hash_id = 5;
    repeated TransactionResult transactions = 6;
    bytes accepted_hash = 7;
    bytes validation_hash = 8;
    bytes merkel_root = 9;
    bytes signature = 10;
    uint32 block_height = 11;
}

message BlockResultSet {
    uint32 version = 1;
    bytes start_block_hash_id = 2;
    bytes end_block_hash_id = 3;
    repeated BlockResult block_results = 5;
}

/**
 * The transaction query objects focus on the basics. This prevents systems and users from getting access to the data
 * they don't have the right to view.
 */
message TransactionQuery {
    uint32 version = 1;
    bytes block_hash_id = 2;
    bytes transaction_hash_id = 3;
    bytes account_hash_id = 4;
    int64 number_of_transactions = 5;
}


message TransactionResultSet {
    uint32 version = 1;
    repeated TransactionResult transactions = 2;
    int64 number_of_transactions = 3;
}

/**
 * The producer query objects
 */
message ProducerQuery {
    uint32 version = 1;
}

message ProducerInfoResult {
    uint32 version = 1;
    bytes account_hash_id = 2;
    repeated bytes tangles = 3;
}

message ProducerResult {
    uint32 version = 1;
    repeated ProducerInfoResult producers = 2;
}